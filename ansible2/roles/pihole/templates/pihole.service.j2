# jinja2: lstrip_blocks: "True"
# pihole.service #######################################################################
[Unit]
Description=pihole
After=network-online.target podman.socket {{- zfs_root | ternary(" mnt-services.mount", "") }}
Wants=network-online.target
Requires=podman.socket {{- zfs_root | ternary(" mnt-services.mount", "") }}
StartLimitInterval=600
StartLimitBurst=5

[Service]
Environment=PODMAN_SYSTEMD_UNIT=%n
Restart=on-failure
KillMode=mixed
TimeoutSec=100
RestartSec=5
ExecStartPre=/bin/rm -f %t/%n.ctr-id
ExecStart=/usr/bin/podman run \
    --cidfile=%t/%n.ctr-id \
    --cgroups=no-conmon \
    {# todo move this to healthy on later podman versions, and remove ExecStartPost #}
    --sdnotify=conmon \
    --replace \
    --rm \
    --name pihole \
    --log-driver none \
    --volume /mnt/services/pihole/etc:/etc/pihole \
    --volume /mnt/services/pihole/dnsmasq:/etc/dnsmasq.d \
    --volume /var/log/pihole:/var/log/pihole \
    --env TZ="Europe/Amsterdam" \
    --env VIRTUAL_HOST=pihole.{{ inventory_hostname }}.{{ domain }} \
    --env FTLCONF_LOCAL_IPV4={{ ansible_facts.default_ipv4.address }} \
    --env REV_SERVER=true \
    --env REV_SERVER_TARGET={{ home_subnet | ansible.utils.usable_range | community.general.json_query('usable_ips[1]') }} \
    --env REV_SERVER_CIDR={{ home_subnet }} \
    --env PIHOLE_UID={{ pihole_user.uid }} \
    --env PIHOLE_GID={{ pihole_user.group }} \
    --dns=127.0.0.1 \
    --dns=1.1.1.1 \
    --publish {{ ansible_facts.default_ipv4.address }}:53:53/udp \
    --publish {{ ansible_facts.default_ipv4.address }}:53:53/tcp \
    {# todo remove when this is fixed https://github.com/containers/podman/issues/18904 #}
    --health-cmd "dig +short +norecurse +retry=0 @127.0.0.1 pi.hole || exit 1" \
    --label "traefik.enable=true" \
    --label "traefik.docker.network=podman" \
    --label "traefik.http.services.pihole.loadbalancer.server.port=80" \
    --label "traefik.http.routers.pihole.rule=Host(`pihole.{{ domain }}`) || Host(`pihole.{{ inventory_hostname }}.{{ domain }}`)" \
    --label "traefik.http.routers.pihole.tls=true" \
    --label "traefik.http.routers.pihole.entrypoints=websecure" \
    docker.io/pihole/pihole:latest
ExecStartPost=/usr/bin/timeout 60 bash -c 'sleep 1; while ! /usr/bin/podman healthcheck run $(cat /run/pihole.service.ctr-id); do sleep 2; done'
ExecStartPost=/usr/sbin/iptables -A CNI-ADMIN -p udp -m conntrack --ctorigsrc {{ home_subnet }} --ctorigdstport 53 -j ACCEPT -m comment --comment "Allow Pihole"
ExecStartPost=/usr/sbin/iptables -A CNI-ADMIN -p tcp -m conntrack --ctorigsrc {{ home_subnet }} --ctorigdstport 53 -j ACCEPT -m comment --comment "Allow Pihole"
ExecStopPost=-/usr/sbin/iptables -D CNI-ADMIN -p udp -m conntrack --ctorigsrc {{ home_subnet }} --ctorigdstport 53 -j ACCEPT -m comment --comment "Allow Pihole"
ExecStopPost=-/usr/sbin/iptables -D CNI-ADMIN -p tcp -m conntrack --ctorigsrc {{ home_subnet }} --ctorigdstport 53 -j ACCEPT -m comment --comment "Allow Pihole"
Type=notify
NotifyAccess=all

[Install]
WantedBy=default.target
