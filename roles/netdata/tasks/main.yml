- name: Install gpg
  apt:
    pkg: gpg
    cache_valid_time: 3600
  become: true
  register: apt_install_gpg
  tags:
    - netdata
    - _check_stage1
    - _check_stage2
    - _check_stage3

- name: Add repository key
  apt_key:
    id: 6588FDD7B14721FE7C3115E6F9177B5265F56346
    url: https://repo.netdata.cloud/netdatabot.gpg.key
    keyring: /etc/apt/trusted.gpg.d/netdata.gpg
  become: true
  when: not (ansible_check_mode and apt_install_gpg.changed)
  tags:
    - netdata
    - _check_stage2
    - _check_stage3

- name: Add repository
  apt_repository:
    repo: deb [signed-by=/etc/apt/trusted.gpg.d/netdata.gpg] https://repo.netdata.cloud/repos/stable/ubuntu/ {{ ansible_distribution_release }}/
  register: apt_repository_netdata
  become: true
  tags:
    - netdata
    - _check_stage2
    - _check_stage3

- name: Install netdata
  import_role:
    name: apt_unit_masked
    tasks_from: apt
  vars:
    apt_unit_masked_pkg: netdata
    apt_unit_masked_unit: netdata.service
    apt_unit_masked_condition: "{{ not (ansible_check_mode and apt_repository_netdata.changed) }}"
  tags:
    - netdata
    - _check_stage3

- name: Install netdata plugins
  when: not (ansible_check_mode and (apt_unit_masked.changed or apt_repository_netdata.changed))
  apt:
    pkg:
      - netdata-plugin-slabinfo
    cache_valid_time: 3600
  become: true
  tags:
    - netdata

- name: Divert configuration file
  community.general.dpkg_divert:
    path: /etc/netdata/netdata.conf
  become: true
  tags:
    - netdata

- name: Configure netdata
  ini_file:
    path: /etc/netdata/netdata.conf
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    owner: netdata
    group: netdata
    mode: "0644"
    ignore_spaces: true
    backup: true
  loop:
    - section: web
      option: bind to
      value: 127.0.0.1
    - section: global
      option: access log
      value: none # accesses are logged by nginx
    - section: db
      option: update every
      value: 5
    - section: registry
      option: enabled
      value: 'yes'
    - section: registry
      option: registry to announce
      value: https://netdata.{{ inventory_hostname }}.{{ domain }}
  register: netdata_conf
  become: true
  tags:
    - netdata

- name: Copy the cloud config
  copy:
    src: cloud.conf
    dest: /var/lib/netdata/cloud.d/cloud.conf
    owner: netdata
    group: netdata
    mode: "0644"
    backup: true
  register: cloud_conf
  become: true
  tags:
    - netdata

- name: Configure prometheus metrics
  import_role:
    name: netdata
    tasks_from: template
  vars:
    netdata_template_src: prometheus.conf.j2
    netdata_template_dest: go.d/prometheus.conf
    netdata_template_mode: "0600"
    netdata_template_restart: "{{ not (ansible_check_mode and (apt_unit_masked.changed or apt_repository_netdata.changed)) }}"
  tags:
    - netdata

- name: Disable analytics
  file:
    path: /etc/netdata/.opt-out-from-anonymous-statistics
    state: touch
    access_time: preserve
    modification_time: preserve
    owner: netdata
    group: netdata
    mode: "0644"
  register: netdata_optout
  become: true
  tags:
    - netdata

- name: Configure docker metrics
  import_role:
    name: netdata
    tasks_from: copy
  vars:
    netdata_copy_src: docker.conf
    netdata_copy_dest: go.d/docker.conf
    netdata_copy_restart: "{{ not (ansible_check_mode and (apt_unit_masked.changed or apt_repository_netdata.changed)) }}"
  tags:
    - netdata

- name: Install intel-gpu-tools
  when: ansible_architecture == "x86_64"
  apt:
    pkg: intel-gpu-tools
    cache_valid_time: 3600
  become: true
  tags:
    - netdata

- name: Configure intel gpu metrics
  import_role:
    name: netdata
    tasks_from: copy
  vars:
    netdata_copy_src: intelgpu.conf
    netdata_copy_dest: go.d/intelgpu.conf
    netdata_copy_condition: '{{ ansible_architecture == "x86_64" }}'
    netdata_copy_restart: "{{ not (ansible_check_mode and (apt_unit_masked.changed or apt_repository_netdata.changed)) }}"
  tags:
    - netdata

- name: Copy health_alarm_notify template
  command: cp /usr/lib/netdata/conf.d/health_alarm_notify.conf /etc/netdata/health_alarm_notify.conf
  args:
    creates: /etc/netdata/health_alarm_notify.conf
  register: netdata_health_alarm_notify_template
  become: true
  tags:
    - netdata

- name: Setup health_alarm_notify
  when: not (ansible_check_mode and netdata_health_alarm_notify_template.changed) # TODO add _check_stageX tag
  lineinfile:
    path: /etc/netdata/health_alarm_notify.conf
    regexp: "{{ item.line }}"
    line: "{{ item.value }}"
    validate: bash -n %s
    backup: true
  loop:
    - line: ^SEND_EMAIL=
      value: SEND_EMAIL="NO"
    - line: ^SEND_TELEGRAM=
      value: SEND_TELEGRAM="YES"
    - line: ^TELEGRAM_BOT_TOKEN=
      value: TELEGRAM_BOT_TOKEN="{{ telegram_netdata_bot_token }}"
    - line: ^DEFAULT_RECIPIENT_TELEGRAM=
      value: DEFAULT_RECIPIENT_TELEGRAM="{{ telegram_personal_chat_id }}"
  register: netdata_health_alarm_notify
  become: true
  tags:
    - netdata

- name: Add user to podman-socket group
  user:
    name: netdata
    groups: podman-socket
    append: true
  become: true
  tags:
    - netdata

- name: Mount debugfs
  mount:
    path: /sys/kernel/debug
    src: /debugfs
    fstype: debugfs
    opts: defaults,noatime
    state: mounted
    backup: true
  register: debugfs_mount
  become: true
  tags:
    - netdata

- name: Configure netdata alerts
  import_role:
    name: netdata
    tasks_from: health_copy
  vars:
    netdata_copy_src: systemdunits_alerts.conf
    netdata_copy_dest: systemdunits.conf
    netdata_copy_restart: "{{ not (ansible_check_mode and (apt_unit_masked.changed or apt_repository_netdata.changed)) }}"
  tags:
    - netdata

- name: Configure systemdunits metrics
  import_role:
    name: netdata
    tasks_from: copy
  vars:
    netdata_copy_src: systemdunits.conf
    netdata_copy_dest: go.d/systemdunits.conf
    netdata_copy_restart: "{{ not (ansible_check_mode and (apt_unit_masked.changed or apt_repository_netdata.changed)) }}"
  tags:
    - netdata

- name: Enable netdata service
  import_role:
    name: systemd_unit
    tasks_from: service
  vars:
    systemd_unit_src: netdata
    systemd_unit_condition: "{{ not (ansible_check_mode and (apt_unit_masked.changed or apt_repository_netdata.changed)) }}"
    systemd_unit_restart: "{{ netdata_conf.changed or cloud_conf.changed or netdata_optout.changed or netdata_health_alarm_notify.changed or debugfs_mount.changed }}"
  tags:
    - netdata

- name: Setup shell for netdata user (for console troubleshooting)
  file:
    path: /var/lib/netdata/.zshrc
    state: touch
    access_time: preserve
    modification_time: preserve
    owner: netdata
    group: netdata
    mode: "0644"
  become: true
  tags:
    - netdata

- name: Configure nginx
  import_role:
    name: nginx
    tasks_from: site
  vars:
    nginx_subdomain: netdata
    nginx_proxy_pass: http://127.0.0.1:19999/
  tags:
    - netdata
