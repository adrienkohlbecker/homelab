# jinja2: lstrip_blocks: "True"
# jellyfin.service #######################################################################
[Unit]
Description=jellyfin
After=network-online.target
Wants=network-online.target
StartLimitInterval=600
StartLimitBurst=5
{% if zfs_root %}
After=zfs_mount_mnt_services.service zfs_mount_mnt_scratch.service zfs_mount_mnt_media.service  zfs_autosnapshot.target
Requires=zfs_mount_mnt_services.service zfs_mount_mnt_scratch.service zfs_mount_mnt_media.service
PartOf=zfs_autosnapshot.target
{% endif %}

[Service]
Environment=PODMAN_SYSTEMD_UNIT=%n
Restart=on-failure
Delegate=yes
TimeoutSec=120
RestartSec=5
Type=notify
NotifyAccess=all

ExecStartPre=/bin/rm -f %t/%n.ctr-id
ExecStart=/usr/bin/podman run \
    --cidfile=%t/%n.ctr-id \
    --cgroups=split \
    --sdnotify=healthy \
    --detach \
    --replace \
    --rm \
    --name jellyfin \
    --user {{ jellyfin_user.uid }}:{{ ansible_facts.getent_group['media'][1] }} \
    --log-driver journald \
    --log-opt tag="jellyfin" \
    --volume /mnt/services/jellyfin:/config \
    --volume /mnt/scratch/jellyfin/transcodes:/config/transcodes \
    --volume /var/log/jellyfin:/config/log \
    --volume /mnt/scratch/jellyfin/cache:/cache \
    --volume /mnt/media:/media \
    --device /dev/dri/:/dev/dri/ \
    --publish 127.0.0.1:8096:8096/tcp \
    --health-cmd "curl --head --location --fail --silent --show-error --connect-timeout 1 --max-time 5 -o /dev/null http://localhost:8096/health" \
    --health-start-period "10s" \
    docker.io/jellyfin/jellyfin:10.9.2
ExecStop=/usr/bin/podman stop --ignore --cidfile=%t/%n.ctr-id --time 60
ExecStopPost=/usr/bin/podman rm --force --ignore --cidfile=%t/%n.ctr-id

[Install]
WantedBy=default.target
{% if zfs_root %}
WantedBy=zfs_autosnapshot.target
{% endif %}
