- name: Add test binary
  when: docker_test
  file:
    state: touch
    path: /usr/bin/podman
    mode: '0755'
  become: true
  tags:
    - csplogger
    - _check_stage1
    - _check_stage2

- name: Add csplogger group
  group:
    name: csplogger
    system: true
  become: true
  tags:
    - csplogger
    - _check_stage1
    - _check_stage2

- name: Add csplogger user
  user:
    name: csplogger
    group: csplogger
    createhome: false
    system: true
    shell: /usr/sbin/nologin
    home: /nonexistent
  become: true
  register: csplogger_user
  tags:
    - csplogger
    - _check_stage1
    - _check_stage2

- name: Create configuration directory
  when: not (ansible_check_mode and csplogger_user.changed)
  file:
    dest: /mnt/services/csplogger
    state: directory
    owner: csplogger
    group: csplogger
    mode: "0755"
  become: true
  tags:
    - csplogger
    - _check_stage2

- name: Install csplogger service
  import_role:
    name: systemd_unit
    tasks_from: template
  vars:
    systemd_unit_src: csplogger.service
    systemd_unit_condition: "{{ not (ansible_check_mode and csplogger_user.changed) }}"
  tags:
    - csplogger
    - _check_stage2

- name: Enable the service
  when: not (ansible_check_mode and (systemd_unit.changed or csplogger_user.changed))
  systemd:
    name: csplogger
    enabled: true
  become: true
  tags:
    - csplogger

- name: Start the service
  when: not (ansible_check_mode and (systemd_unit.changed or csplogger_user.changed)) and not docker_test
  systemd:
    name: csplogger
    state: started
  register: systemd_started
  become: true
  tags:
    - csplogger

- name: Restart the service
  when: not (ansible_check_mode and (systemd_unit.changed or csplogger_user.changed)) and not docker_test and ((systemd_unit.changed) and not systemd_started.changed)
  systemd:
    name: csplogger
    state: restarted
  become: true
  tags:
    - csplogger

- name: Configure nginx
  import_role:
    name: nginx
    tasks_from: site
  vars:
    nginx_subdomain: csplogger
    nginx_proxy_pass: http://localhost:8443/
    nginx_server_conf: |
      location = / {
        return 301 /dashboard;
      }
  tags:
    - csplogger
