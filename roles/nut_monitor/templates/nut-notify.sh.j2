#!/bin/bash
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
IFS=$'\n\t'
set -euo pipefail
trap 'eval echo "\# $BASH_COMMAND"' DEBUG

EVENT=${1:-}
case $EVENT in
  "")
    >&2 echo "Missing event argument"
    echo "Usage: nut-notify EVENT"
    exit 1
    ;;
  online)
    MSG="UPS is back online"
    ;;
  onbatt)
    MSG="UPS is on battery"
    ;;
  lowbatt)
    MSG="UPS is on battery and has a low battery (is critical)"
    ;;
  fsd)
    MSG="UPS is being shutdown by the primary (FSD = Forced Shutdown)"
    ;;
  commok)
    MSG="Communications established with the UPS"
    ;;
  commbad)
    MSG="Communications lost to the UPS"
    ;;
  shutdown)
    MSG="The system is being shutdown"
    ;;
  replbatt)
    MSG="The UPS battery is bad and needs to be replaced"
    ;;
  nocomm)
    MSG="A UPS is unavailable (can't be contacted for monitoring)"
    ;;
  noparent)
    MSG="upsmon parent process died - shutdown impossible"
    ;;
  *)
    >&2 echo "unexpected event $EVENT"
    exit 1
    ;;
esac

UPS=eaton@localhost
STAT=`upsc $UPS ups.status`
BATT=`upsc $UPS battery.charge`
RUNTIME_SEC=`upsc $UPS battery.runtime`
RUNTIME=`date -d@$RUNTIME_SEC -u +%H:%M:%S`
DATE=`date --iso-8601=seconds`

printf "$MSG\n\nStatus Page: https://nut.{{ inventory_hostname }}.{{ domain }}/upsstats.cgi?host=$UPS\nDate: $DATE\nStatus: $STAT\nBattery charge: $BATT\nRuntime: $RUNTIME\n\n" | mail -s "UPS event $EVENT on {{ inventory_hostname }}" root
