- name: Install docker
  import_role:
    name: apt_unit_masked
    tasks_from: apt
  vars:
    apt_unit_masked_pkg: docker.io
    apt_unit_masked_unit: docker.service
  tags:
    - docker
    - _check_stage1
    - _check_stage2

- name: Copy the docker config
  template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    mode: "0644"
    owner: root
    group: root
    validate: dockerd --validate --config-file=%s
    backup: true
  register: docker_conf
  become: true
  tags:
    - docker
    - _check_stage2

- name: Create mount point
  file:
    dest: /var/lib/docker
    state: directory
    owner: root
    group: root
    mode: "0710"
  become: true
  tags:
    - docker
    - _check_stage2

- name: Create docker zvol
  when: zfs_root
  zfs:
    name: rpool/docker
    state: present
    extra_zfs_properties:
      volsize: '{{ "20GB" | human_to_bytes }}'
  register: zfs_zvol_docker
  become: true
  tags:
    - docker
    - _check_stage2

- name: Create a ext4 filesystem on docker zvol
  when: not (ansible_check_mode and zfs_zvol_docker.changed) and zfs_root
  filesystem:
    fstype: ext4
    dev: /dev/zvol/rpool/docker
  become: true
  tags:
    - docker

- name: Mount docker zvol
  when: zfs_root
  mount:
    path: /var/lib/docker
    src: /dev/zvol/rpool/docker
    fstype: ext4
    opts: defaults,noatime
    state: mounted
    backup: true
  become: true
  tags:
    - docker

- name: Enable docker service
  import_role:
    name: systemd_unit
    tasks_from: service
  vars:
    systemd_unit_src: docker
    systemd_unit_condition: "{{ not (ansible_check_mode and apt_unit_masked.changed) }}"
    systemd_unit_start: "{{ not docker_test }}"
    systemd_unit_restart: "{{ docker_conf.changed }}"
  tags:
    - docker

- name: Add user to docker group
  import_role:
    name: usergroup_immediate
    tasks_from: user
  when: not (ansible_check_mode and apt_unit_masked.changed)
  vars:
    usergroup_immediate_group: docker
  tags:
    - docker

- name: Ensure grub directory exists
  file:
    dest: /etc/default/grub.d/
    state: directory
    owner: root
    group: root
    mode: "0755"
  become: true
  tags:
    - docker

- name: Enable memory cgroup and swap accounting
  when: grub_bootloader
  copy:
    dest: /etc/default/grub.d/99-docker.cfg
    content: "GRUB_CMDLINE_LINUX=\"$GRUB_CMDLINE_LINUX cgroup_enable=memory swapaccount=1\"\n"
    backup: true
    owner: root
    group: root
    mode: "0644"
  register: grub_cfg
  become: true
  tags:
    - docker

- name: Update grub
  when: grub_bootloader and grub_cfg.changed and not docker_test
  command: update-grub
  changed_when: true
  become: true
  tags:
    - docker

- name: Ask to reboot
  when: grub_cfg.changed
  file:
    path: /var/run/reboot-required
    state: touch
    owner: root
    group: root
    mode: "0644"
  become: true
  tags:
    - docker

- name: Schedule the clean script
  cron:
    name: docker_clean
    minute: '5'
    hour: '0'
    job: /usr/local/bin/run_job daily docker_clean /usr/bin/docker system prune -f
    user: root
    cron_file: ansible_docker_clean
    backup: true
  become: true
  tags:
    - docker

- name: Monitor clean script
  import_role:
    name: cron
    tasks_from: monitor
  vars:
    cron_entry: docker_clean
  tags:
    - docker
