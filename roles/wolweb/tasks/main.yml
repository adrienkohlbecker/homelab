- name: Add test binary
  when: docker_test
  file:
    state: touch
    path: /usr/bin/podman
    mode: '0755'
  become: true
  tags:
    - wolweb
    - _check_stage1
    - _check_stage2

- name: Install jq
  apt:
    pkg:
      - jq
    cache_valid_time: 3600
  become: true
  tags:
    - wolweb
    - _check_stage1
    - _check_stage2

- name: Add wolweb group
  group:
    name: wolweb
    system: true
  become: true
  tags:
    - wolweb
    - _check_stage1
    - _check_stage2

- name: Add wolweb user
  user:
    name: wolweb
    group: wolweb
    createhome: false
    system: true
    shell: /usr/sbin/nologin
    home: /nonexistent
  become: true
  register: wolweb_user
  tags:
    - wolweb
    - _check_stage1
    - _check_stage2

- name: Create configuration directory
  when: not (ansible_check_mode and wolweb_user.changed)
  file:
    dest: /mnt/services/wolweb
    state: directory
    owner: wolweb
    group: wolweb
    mode: "0755"
  become: true
  tags:
    - wolweb
    - _check_stage2

- name: Compute broadcast ip
  set_fact:
    wolweb_broadcast_ip: "{{ (docker_test|ternary('127.0.0.1',ansible_facts.default_ipv4.address) + '/' + docker_test|ternary('24',ansible_facts.default_ipv4.netmask)) | ansible.utils.ipaddr('broadcast') }}"
  become: true
  tags:
    - wolweb
    - _check_stage2

- name: Configure wolweb
  template:
    src: config.json.j2
    dest: /mnt/services/wolweb/config.json
    owner: wolweb
    group: wolweb
    mode: "0600"
    backup: true
    validate: jq . %s
  register: wolweb_conf
  become: true
  tags:
    - wolweb
    - _check_stage2

- name: Configure wolweb
  template:
    src: devices.json.j2
    dest: /mnt/services/wolweb/devices.json
    owner: wolweb
    group: wolweb
    mode: "0600"
    backup: true
    validate: jq . %s
  register: wolweb_devices
  become: true
  tags:
    - wolweb
    - _check_stage2

- name: Install wolweb service
  import_role:
    name: systemd_unit
    tasks_from: template
  vars:
    systemd_unit_src: wolweb.service
    systemd_unit_condition: "{{ not (ansible_check_mode and wolweb_user.changed) }}"
  tags:
    - wolweb
    - _check_stage2

- name: Enable wolweb service
  import_role:
    name: systemd_unit
    tasks_from: service
  vars:
    systemd_unit_src: wolweb
    systemd_unit_condition: "{{ not (ansible_check_mode and systemd_unit.changed) }}"
    systemd_unit_restart: "{{ systemd_unit.changed or wolweb_conf.changed or wolweb_devices.changed }}"
  tags:
    - wolweb

- name: Configure nginx
  import_role:
    name: nginx
    tasks_from: site
  vars:
    nginx_subdomain: wolweb
    nginx_proxy_pass: http://localhost:8089/
  tags:
    - wolweb
