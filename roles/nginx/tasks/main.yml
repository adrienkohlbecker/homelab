- name: Install nginx
  import_role:
    name: apt_unit_masked
    tasks_from: apt
  vars:
    apt_unit_masked_pkg: nginx
    apt_unit_masked_unit: nginx.service
  tags:
    - nginx
    - _check_stage1
    - _check_stage2

- name: Disable default site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  register: nginx_default_conf
  become: true
  tags:
    - nginx
    - _check_stage2

- name: Generate Diffie-Hellman parameters
  when: not (ansible_check_mode and apt_unit_masked.changed)
  openssl_dhparam:
    path: /etc/nginx/dhparam.pem
    size: 2048
  become: true
  tags:
    - nginx
    - _check_stage2

- name: Configure nginx
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: "0644"
    backup: true
  become: true
  register: nginx_conf
  tags:
    - nginx

- name: Enable stub_status
  copy:
    src: status.conf
    dest: /etc/nginx/conf.d/status.conf
    owner: root
    group: root
    mode: "0644"
    backup: true
  become: true
  register: nginx_status_conf
  tags:
    - nginx

- name: Enable nginx service
  import_role:
    name: systemd_unit
    tasks_from: service
  vars:
    systemd_unit_src: nginx
    systemd_unit_condition: "{{ not (ansible_check_mode and apt_unit_masked.changed) }}"
    systemd_unit_restart: "{{ apt_unit_masked.changed or nginx_default_conf.changed or nginx_conf.changed or nginx_status_conf.changed }}"
  tags:
    - nginx

# - name: Restart netdata
#   when: nginx_status_conf.changed
#   systemd:
#     name: netdata
#     state: restarted
#   become: true
#   tags:
#     - nginx

- name: Configure nginx static sites (marantz)
  import_tasks: site.yml
  vars:
    nginx_subdomain: marantz
    nginx_proxy_pass: https://{{ external_ips.marantz }}:10443/
    nginx_site_reload: "{{ not (ansible_check_mode and apt_unit_masked.changed) }}"
  tags:
    - nginx

- name: Configure nginx static sites (printer)
  import_tasks: site.yml
  vars:
    nginx_subdomain: printer
    nginx_proxy_pass: http://{{ external_ips.printer }}:80/
    nginx_site_reload: "{{ not (ansible_check_mode and apt_unit_masked.changed) }}"
  tags:
    - nginx

- name: Configure nginx static sites (siglent)
  import_tasks: site.yml
  vars:
    nginx_subdomain: siglent
    nginx_proxy_pass: http://{{ external_ips.siglent }}:80/
    nginx_site_reload: "{{ not (ansible_check_mode and apt_unit_masked.changed) }}"
  tags:
    - nginx

- name: Configure nginx static sites (unifi)
  import_tasks: site.yml
  vars:
    nginx_subdomain: unifi
    nginx_proxy_pass: https://{{ external_ips.udm }}:443/
    nginx_csp_additional: img-src static.ui.com {{ nginx_csp_default }}
    nginx_site_reload: "{{ not (ansible_check_mode and apt_unit_masked.changed) }}"
  tags:
    - nginx

- name: Configure nginx static sites (ups)
  import_tasks: site.yml
  vars:
    nginx_subdomain: ups
    nginx_proxy_pass: https://{{ external_ips.eaton }}:443/
    nginx_site_reload: "{{ not (ansible_check_mode and apt_unit_masked.changed) }}"
  tags:
    - nginx

- name: Configure nginx static sites (tubeszb)
  import_tasks: site.yml
  vars:
    nginx_subdomain: tubeszb
    nginx_proxy_pass: http://{{ external_ips.tubeszb }}:80/
    nginx_site_reload: "{{ not (ansible_check_mode and apt_unit_masked.changed) }}"
  tags:
    - nginx

- name: Configure nginx static sites (otgw)
  import_tasks: site.yml
  vars:
    nginx_subdomain: otgw
    nginx_proxy_pass: http://{{ external_ips.otgw }}:80/
    nginx_location_conf: |
      # bypass http auth
      proxy_set_header Authorization "Basic {{ ("admin:" + otgw_admin_password) | b64encode }}";
    nginx_permissions: "0600"
    nginx_site_reload: "{{ not (ansible_check_mode and apt_unit_masked.changed) }}"
  tags:
    - nginx
