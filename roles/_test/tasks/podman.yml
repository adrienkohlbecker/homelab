- name: _test | Install podman
  shell: |
    set -euo pipefail

    cat <<EOF >/etc/apt/sources.list.d/noble.list
    deb {{ (ansible_architecture == "aarch64") | ternary('http://ports.ubuntu.com/ubuntu-ports', 'http://archive.ubuntu.com/ubuntu') }} noble main restricted universe multiverse
    deb {{ (ansible_architecture == "aarch64") | ternary('http://ports.ubuntu.com/ubuntu-ports', 'http://archive.ubuntu.com/ubuntu') }} noble-updates main restricted universe multiverse
    deb {{ (ansible_architecture == "aarch64") | ternary('http://ports.ubuntu.com/ubuntu-ports', 'http://archive.ubuntu.com/ubuntu') }} noble-security main restricted universe multiverse
    EOF

    cat <<EOF >/etc/apt/preferences.d/podman-noble-backport
    Package: podman buildah containernetworking-plugins conmon slirp4netns libc6 libgpgme11t64 libsubid4 libc-bin golang-github-containers-common fuse-overlayfs libglib2.0-0t64 locales libfuse3-3 fuse3
    Pin: release n=noble
    Pin-Priority: 991

    Package: *
    Pin: release n=jammy
    Pin-Priority: 900

    Package: *
    Pin: release o=Ubuntu
    Pin-Priority: -10
    EOF

    apt-get update && apt-get install -y --no-install-recommends podman iptables

    # in nested podman (such as when testing a playbook that builds a podman image, or executes a podman image),
    # we need to ensure the default networks do not conflict otherwise the nested container has issues with TCP
    sed -i 's?#default_subnet =.*?default_subnet = "{{ podman_default_network }}"?' /usr/share/containers/containers.conf
    systemctl restart podman
  args:
    executable: /bin/bash
    creates: /etc/apt/preferences.d/podman-noble-backport
  become: true
