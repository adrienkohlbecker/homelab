- name: Install certbot
  apt:
    pkg:
      - certbot
      - python3-certbot-dns-cloudflare
    cache_valid_time: 3600
  become: true
  register: apt_install_certbot
  tags:
    - certbot
    - _check_stage1
    - _check_stage2

- name: Create config directory
  file:
    dest: /etc/letsencrypt
    state: directory
    owner: root
    group: root
    mode: "0755"
  become: true
  tags:
    - certbot
    - _check_stage2

- name: Set permissions on storage directories
  file:
    dest: /etc/letsencrypt/{{ item }}
    state: directory
    owner: root
    group: root
    mode: "0755"
  loop:
    - live
    - archive
  become: true
  tags:
    - certbot
    - _check_stage2

- name: Write cloudflare credentials
  copy:
    dest: /etc/letsencrypt/cloudflare.ini
    content: "dns_cloudflare_api_token = {{ cloudflare_api_token }}\n"
    mode: "0600"
    owner: root
    group: root
    backup: true
  become: true
  tags:
    - certbot
    - _check_stage2

- name: Get certificates
  command: certbot certonly --agree-tos -m {{ root_email }} --noninteractive {{ docker_test|ternary('--test-cert', '') }} --dns-cloudflare --dns-cloudflare-credentials /etc/letsencrypt/cloudflare.ini --dns-cloudflare-propagation-seconds 30 -d "{{ item }}" -d "*.{{ item }}"
  args:
    creates: /etc/letsencrypt/live/{{ item }}/privkey.pem
  become: true
  loop:
    - "{{ domain }}"
    - "{{ inventory_hostname }}.{{ domain }}"
  tags:
    - certbot
    - _check_stage2

- name: Configure logrotate
  import_role:
    name: logrotate
    tasks_from: compression
  vars:
    logrotate_item: /etc/logrotate.d/certbot
    logrotate_condition: "{{ not (ansible_check_mode and apt_install_certbot.changed) }}"
  tags:
    - certbot
    - _check_stage2

- name: Copy certificate metrics template
  when: not docker_test
  command: cp /usr/lib/netdata/conf.d/go.d/x509check.conf /etc/netdata/go.d/x509check.conf
  args:
    creates: /etc/netdata/go.d/x509check.conf
  register: netdata_certificate_conf_template
  become: true
  tags:
    - certbot
    - _check_stage2

- name: Setup certificate metrics
  when: not docker_test and not (ansible_check_mode and netdata_certificate_conf_template.changed)
  template:
    src: x509check.conf.j2
    dest: /etc/netdata/go.d/x509check.conf
    owner: netdata
    group: netdata
    mode: "0644"
    backup: true
  register: netdata_certificate_conf
  become: true
  tags:
    - certbot

- name: Restart netdata
  when: not docker_test and (netdata_certificate_conf_template.changed or netdata_certificate_conf.changed)
  systemd:
    name: netdata
    state: restarted
  become: true
  tags:
    - certbot
