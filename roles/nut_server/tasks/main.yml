- name: Install nut
  apt:
    pkg:
      - nut-snmp
      - nut-cgi
      - fcgiwrap
    cache_valid_time: 3600
  become: true
  register: apt_install_nut
  tags:
    - nut_server
    - _check_stage1

- name: Configure nut nut.conf
  when: not (ansible_check_mode and apt_install_nut.changed)
  copy:
    src: nut.conf
    dest: /etc/nut/nut.conf
    backup: true
    owner: root
    group: nut
    mode: "0640"
  become: true
  register: nut_nut_conf
  tags:
    - nut_server

- name: Configure nut ups.conf
  when: not (ansible_check_mode and apt_install_nut.changed)
  template:
    src: ups.conf.j2
    dest: /etc/nut/ups.conf
    owner: root
    group: nut
    mode: "0640"
    backup: true
    # Todo: When on Python 3.13 (after noble)
    # validate: python3 -c 'import configparser; configparser.ConfigParser(allow_no_value=True, allow_unnamed_section=True).read("%s")'
  register: nut_ups_conf
  become: true
  tags:
    - nut_server

- name: Configure nut upsd.conf
  when: not (ansible_check_mode and apt_install_nut.changed)
  copy:
    src: upsd.conf
    dest: /etc/nut/upsd.conf
    backup: true
    owner: root
    group: nut
    mode: "0640"
  become: true
  register: nut_upsd_conf
  tags:
    - nut_server

- name: Configure nut upsd.users
  when: not (ansible_check_mode and apt_install_nut.changed)
  template:
    src: upsd.users.j2
    dest: /etc/nut/upsd.users
    owner: root
    group: nut
    mode: "0640"
    backup: true
    validate: python3 -c 'import configparser; configparser.ConfigParser(allow_no_value=True).read("%s")'
  become: true
  register: nut_upsd_users
  tags:
    - nut_server

- name: Enable nut-driver service
  import_role:
    name: systemd_unit
    tasks_from: service
  vars:
    systemd_unit_src: nut-driver
    systemd_unit_condition: "{{ not (ansible_check_mode and apt_install_nut.changed) }}"
    systemd_unit_restart: "{{ nut_nut_conf.changed or nut_ups_conf.changed }}"
    systemd_unit_start: "{{ not vmware_test }}"
  tags:
    - nut_server

- name: Enable nut-server service
  import_role:
    name: systemd_unit
    tasks_from: service
  vars:
    systemd_unit_src: nut-server
    systemd_unit_condition: "{{ not (ansible_check_mode and apt_install_nut.changed) }}"
    systemd_unit_restart: "{{ nut_nut_conf.changed or nut_upsd_conf.changed or nut_upsd_users.changed }}"
    systemd_unit_start: "{{ not vmware_test }}" # TODO: no hardware UPS to talk to
  tags:
    - nut_server

- name: Configure nut hosts.conf
  when: not (ansible_check_mode and apt_install_nut.changed)
  copy:
    src: hosts.conf
    dest: /etc/nut/hosts.conf
    backup: true
    owner: root
    group: root
    mode: "0644"
  become: true
  tags:
    - nut_server

- name: Configure nut upsset.conf
  when: not (ansible_check_mode and apt_install_nut.changed)
  copy:
    src: upsset.conf
    dest: /etc/nut/upsset.conf
    backup: true
    owner: root
    group: root
    mode: "0644"
  become: true
  tags:
    - nut_server

- name: Configure nginx
  import_role:
    name: nginx
    tasks_from: site
  vars:
    nginx_subdomain: nut
    nginx_server_conf: |
      location = / {
        return 301 /upsstats.cgi;
      }
    nginx_location_conf: |
      gzip off;
      root /usr/lib/cgi-bin/nut;

      include /etc/nginx/fastcgi_params;

      fastcgi_pass  unix:/var/run/fcgiwrap.socket;
      fastcgi_param SCRIPT_FILENAME  /usr/lib/cgi-bin/nut$fastcgi_script_name;
  tags:
    - nut_server
