- name: Add homeassistant group
  group:
    name: homeassistant
    system: true
  become: true
  tags:
    - homeassistant

- name: Add homeassistant user
  user:
    name: homeassistant
    group: homeassistant
    createhome: false
    system: true
    shell: /usr/sbin/nologin
    home: /nonexistent
  become: true
  register: homeassistant_user
  tags:
    - homeassistant

- name: Create configuration directory
  file:
    dest: /mnt/services/homeassistant
    state: directory
    owner: homeassistant
    group: homeassistant
    mode: "0755"
  become: true
  tags:
    - homeassistant

- name: Get influxdb org ID
  shell: set -euo pipefail; podman exec influxdb influx org list --name home --hide-headers | cut -f1
  args:
    executable: /bin/bash
  check_mode: false
  changed_when: false
  register: homeassistant_influxdb_org
  become: true
  tags:
    - homeassistant

- name: Create influxdb user
  check_mode: false
  shell: set -euo pipefail; ((podman exec influxdb influx user list --name homeassistant --hide-headers && echo >&2 "Found!") || ( {{ ansible_check_mode | ternary('echo TODO', 'podman exec influxdb influx user create --org-id ' + homeassistant_influxdb_org.stdout + ' --name homeassistant --hide-headers') }} )) | tr -s '\t' | cut -f1
  args:
    executable: /bin/bash
  changed_when: "'Found!' not in homeassistant_influxdb_user.stderr"
  register: homeassistant_influxdb_user
  become: true
  tags:
    - homeassistant

- name: Create influxdb bucket
  check_mode: false
  shell: set -euo pipefail; ((podman exec influxdb influx bucket list --org-id {{ homeassistant_influxdb_org.stdout }} --name homeassistant --hide-headers && echo >&2 "Found!") || ( {{ ansible_check_mode | ternary('echo TODO', 'podman exec influxdb influx bucket create --org-id ' + homeassistant_influxdb_org.stdout + ' --name homeassistant --hide-headers') }} )) | tr -s '\t' | cut -f1
  args:
    executable: /bin/bash
  changed_when: "'Found!' not in homeassistant_influxdb_bucket.stderr"
  register: homeassistant_influxdb_bucket
  become: true
  tags:
    - homeassistant

- name: Create influxdb auth
  check_mode: false
  shell: set -euo pipefail; ((podman exec influxdb influx auth list -u homeassistant | grep "{{ homeassistant_influxdb_user.stdout }}" | grep "\\[write:orgs/{{ homeassistant_influxdb_org.stdout }}/buckets/{{ homeassistant_influxdb_bucket.stdout }}\\]" && echo >&2 "Found!") || ( {{ ansible_check_mode | ternary('echo TODO', 'podman exec influxdb influx auth create --org-id ' + homeassistant_influxdb_org.stdout + ' --user homeassistant --write-bucket ' + homeassistant_influxdb_bucket.stdout + ' --hide-headers') }} )) | tr -s '\t' | cut -f2
  args:
    executable: /bin/bash
  changed_when: "'Found!' not in homeassistant_influxdb_auth.stderr"
  register: homeassistant_influxdb_auth
  become: true
  tags:
    - homeassistant

- name: Configure homeassistant
  template:
    src: configuration.yaml.j2
    dest: /mnt/services/homeassistant/configuration.yaml
    owner: homeassistant
    group: homeassistant
    mode: "0600"
    backup: true
    block_start_string: "<<%"
    block_end_string: "%>>"
    variable_start_string: "<<<"
    variable_end_string: ">>>"
  register: homeassistant_conf
  become: true
  tags:
    - homeassistant

- name: Install homeassistant service
  import_role:
    name: systemd_unit
    tasks_from: template
  vars:
    systemd_unit_src: homeassistant.service
  tags:
    - homeassistant

- name: Enable the service
  when: not (ansible_check_mode and systemd_unit.changed)
  systemd:
    name: homeassistant
    enabled: true
  become: true
  tags:
    - homeassistant

- name: Start the service
  when: not (ansible_check_mode and systemd_unit.changed)
  systemd:
    name: homeassistant
    state: started
  register: systemd_started
  become: true
  tags:
    - homeassistant

# - name: Restart the service
#   when: not (ansible_check_mode and systemd_unit.changed) and ((systemd_unit.changed or homeassistant_conf.changed) and not systemd_started.changed)
#   systemd:
#     name: homeassistant
#     state: restarted
#   become: true
#   tags:
#     - homeassistant

- name: Configure nginx
  import_role:
    name: nginx
    tasks_from: site
  vars:
    nginx_subdomain: homeassistant
    nginx_proxy_pass: http://localhost:8123/
    nginx_csp_additional: "connect-src *.openstreetmap.org {{ nginx_csp_default }}; img-src *.cartocdn.com *.home-assistant.io {{ nginx_csp_default }}"
  tags:
    - homeassistant
