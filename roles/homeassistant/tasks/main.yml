- name: Add homeassistant group
  group:
    name: homeassistant
    system: true
  become: true
  tags:
    - homeassistant
    - _check_stage1
    - _check_stage2
    - _check_stage3
    - _check_stage4

- name: Add homeassistant user
  user:
    name: homeassistant
    group: homeassistant
    createhome: false
    system: true
    shell: /usr/sbin/nologin
    home: /nonexistent
  become: true
  register: homeassistant_user
  tags:
    - homeassistant
    - _check_stage1
    - _check_stage2
    - _check_stage3
    - _check_stage4

- name: Create configuration directory
  file:
    dest: /mnt/services/homeassistant
    state: directory
    owner: homeassistant
    group: homeassistant
    mode: "0755"
  become: true
  tags:
    - homeassistant
    - _check_stage2
    - _check_stage3
    - _check_stage4

- name: Get influxdb org ID
  shell: set -euo pipefail; podman exec influxdb influx org list --name home --hide-headers | cut -f1
  args:
    executable: /bin/bash
  check_mode: false
  changed_when: false
  register: homeassistant_influxdb_org
  become: true
  tags:
    - homeassistant
    - _check_stage2
    - _check_stage3
    - _check_stage4

- name: Create influxdb user
  check_mode: false
  shell: set -euo pipefail; ((podman exec influxdb influx user list --name homeassistant --hide-headers && echo >&2 "Found!") || ( {{ ansible_check_mode | ternary('echo TODO', 'podman exec influxdb influx user create --org-id ' + homeassistant_influxdb_org.stdout + ' --name homeassistant --hide-headers') }} )) | tr -s '\t' | cut -f1
  args:
    executable: /bin/bash
  changed_when: "'Found!' not in homeassistant_influxdb_user.stderr"
  register: homeassistant_influxdb_user
  become: true
  tags:
    - homeassistant
    - _check_stage2
    - _check_stage3
    - _check_stage4

- name: Create influxdb bucket
  check_mode: false
  shell: set -euo pipefail; ((podman exec influxdb influx bucket list --org-id {{ homeassistant_influxdb_org.stdout }} --name homeassistant --hide-headers && echo >&2 "Found!") || ( {{ ansible_check_mode | ternary('echo TODO', 'podman exec influxdb influx bucket create --org-id ' + homeassistant_influxdb_org.stdout + ' --name homeassistant --hide-headers') }} )) | tr -s '\t' | cut -f1
  args:
    executable: /bin/bash
  changed_when: "'Found!' not in homeassistant_influxdb_bucket.stderr"
  register: homeassistant_influxdb_bucket
  become: true
  tags:
    - homeassistant
    - _check_stage2
    - _check_stage3
    - _check_stage4

- name: Create influxdb auth
  check_mode: false
  shell: set -euo pipefail; ((podman exec influxdb influx auth list -u homeassistant | grep "{{ homeassistant_influxdb_user.stdout }}" | grep "\\[write:orgs/{{ homeassistant_influxdb_org.stdout }}/buckets/{{ homeassistant_influxdb_bucket.stdout }}\\]" && echo >&2 "Found!") || ( {{ ansible_check_mode | ternary('echo TODO', 'podman exec influxdb influx auth create --org-id ' + homeassistant_influxdb_org.stdout + ' --user homeassistant --write-bucket ' + homeassistant_influxdb_bucket.stdout + ' --hide-headers') }} )) | tr -s '\t' | cut -f2
  args:
    executable: /bin/bash
  changed_when: "'Found!' not in homeassistant_influxdb_auth.stderr"
  register: homeassistant_influxdb_auth
  become: true
  tags:
    - homeassistant
    - _check_stage2
    - _check_stage3
    - _check_stage4

- name: Configure homeassistant
  template:
    src: configuration.yaml.j2
    dest: /mnt/services/homeassistant/configuration.yaml
    owner: homeassistant
    group: homeassistant
    mode: "0600"
    backup: true
    block_start_string: "<<%"
    block_end_string: "%>>"
    variable_start_string: "<<<"
    variable_end_string: ">>>"
  register: homeassistant_conf
  become: true
  tags:
    - homeassistant
    - _check_stage2
    - _check_stage3
    - _check_stage4

- name: Create custom_templates directory
  file:
    dest: /mnt/services/homeassistant/custom_templates
    state: directory
    owner: homeassistant
    group: homeassistant
    mode: "0755"
  become: true
  tags:
    - homeassistant
    - _check_stage2
    - _check_stage3
    - _check_stage4

- name: Configure homeassistant macros
  copy:
    src: macros.jinja
    dest: /mnt/services/homeassistant/custom_templates/macros.jinja
    owner: homeassistant
    group: homeassistant
    mode: "0600"
    backup: true
  register: homeassistant_macros
  become: true
  tags:
    - homeassistant
    - _check_stage2
    - _check_stage3
    - _check_stage4

- name: Configure homeassistant sensors
  copy:
    src: sensors.yaml
    dest: /mnt/services/homeassistant/sensors.yaml
    owner: homeassistant
    group: homeassistant
    mode: "0600"
    backup: true
  register: homeassistant_sensors
  become: true
  tags:
    - homeassistant
    - _check_stage2
    - _check_stage3
    - _check_stage4

- name: Configure homeassistant templates
  copy:
    src: templates.yaml
    dest: /mnt/services/homeassistant/templates.yaml
    owner: homeassistant
    group: homeassistant
    mode: "0600"
    backup: true
  register: homeassistant_templates
  become: true
  tags:
    - homeassistant
    - _check_stage2
    - _check_stage3
    - _check_stage4

- name: Configure homeassistant blueprints
  copy:
    src: blueprints/automation/hvac_dry_mode.yaml
    dest: /mnt/services/homeassistant/blueprints/automation/hvac_dry_mode.yaml
    owner: homeassistant
    group: homeassistant
    mode: "0644"
    backup: true
  register: homeassistant_blueprints
  become: true
  tags:
    - homeassistant
    - _check_stage2
    - _check_stage3
    - _check_stage4

- name: Create www directory
  file:
    dest: /mnt/services/homeassistant/www
    state: directory
    owner: homeassistant
    group: homeassistant
    mode: "0755"
  become: true
  register: homeassistant_www_dir
  tags:
    - homeassistant
    - _check_stage2
    - _check_stage3
    - _check_stage4

- name: Get stats of the thermal_comfort_icons.js file
  stat:
    path: /mnt/services/homeassistant/www/thermal_comfort_icons.js
  register: thermal_comfort_icons_check
  become: true
  tags:
    - homeassistant
    - _check_stage3
    - _check_stage4

- name: Install thermal_comfort_icons if needed
  when: not thermal_comfort_icons_check.stat.exists or thermal_comfort_icons_check.stat.checksum != '7a37a9c4532308923adfc1378715cf09aaaa4d13'
  become: true
  tags:
    - homeassistant
    - _check_stage3
    - _check_stage4
  block:
    - name: Download thermal_comfort_icons
      check_mode: false
      get_url:
        url: https://github.com/rautesamtr/thermal_comfort_icons/archive/refs/tags/1.3.0.tar.gz
        checksum: sha256:fc790c528f223c15eef0920bb66b0f1cb0986d41e8a447cf21ee4dae0750aa53
        dest: /tmp/thermal_comfort_icons.tar.gz
        mode: "0644"
        owner: root
        group: root

    - name: Install thermal_comfort_icons
      when: not (ansible_check_mode and homeassistant_www_dir.changed)
      unarchive:
        src: /tmp/thermal_comfort_icons.tar.gz
        remote_src: true
        dest: /mnt/services/homeassistant/www
        mode: "0644"
        owner: homeassistant
        group: homeassistant
        include: [ thermal_comfort_icons-1.3.0/dist/thermal_comfort_icons.js ]
        list_files: true
        extra_opts: [ --strip-components=2 ]
      register: thermal_comfort_icons_installed

    - name: Delete tar file
      file:
        path: /tmp/thermal_comfort_icons.tar.gz
        state: absent

- name: Create custom_components directory
  file:
    dest: /mnt/services/homeassistant/custom_components
    state: directory
    owner: homeassistant
    group: homeassistant
    mode: "0755"
  become: true
  tags:
    - homeassistant
    - _check_stage3
    - _check_stage4

- name: Install unzip
  apt:
    pkg:
      - unzip
    cache_valid_time: 3600
  become: true
  tags:
    - homeassistant
    - _check_stage3
    - _check_stage4

- name: Create thermal_comfort directory
  file:
    dest: /mnt/services/homeassistant/custom_components/thermal_comfort
    state: directory
    owner: homeassistant
    group: homeassistant
    mode: "0755"
  become: true
  register: homeassistant_thermal_comfort_dir
  tags:
    - homeassistant
    - _check_stage3
    - _check_stage4

- name: Get stats of the thermal_comfort custom_component
  stat:
    path: /mnt/services/homeassistant/custom_components/thermal_comfort/manifest.json
  register: thermal_comfort_check
  become: true
  tags:
    - homeassistant
    - _check_stage4

- name: Install thermal_comfort if needed
  when: not thermal_comfort_check.stat.exists
  become: true
  tags:
    - homeassistant
    - _check_stage4
  block:
    - name: Download thermal_comfort
      check_mode: false
      get_url:
        url: https://github.com/dolezsa/thermal_comfort/releases/download/2.2.5/thermal_comfort.zip
        checksum: sha256:c4ea4903f8f3ce787ddc4d0aef34397a1872431fa8e046589dc341bb8cbbcec9
        dest: /tmp/thermal_comfort.zip
        mode: "0644"
        owner: root
        group: root

    - name: Install thermal_comfort
      when: not (ansible_check_mode and homeassistant_thermal_comfort_dir.changed)
      unarchive:
        src: /tmp/thermal_comfort.zip
        remote_src: true
        dest: /mnt/services/homeassistant/custom_components/thermal_comfort
        mode: "a+rX"
        owner: homeassistant
        group: homeassistant
        list_files: true
      register: thermal_comfort_installed

    - name: Delete tar file
      file:
        path: /tmp/thermal_comfort.zip
        state: absent

- name: Create hacs directory
  file:
    dest: /mnt/services/homeassistant/custom_components/hacs
    state: directory
    owner: homeassistant
    group: homeassistant
    mode: "0755"
  become: true
  register: homeassistant_hacs_dir
  tags:
    - homeassistant
    - _check_stage3
    - _check_stage4

- name: Get stats of the hacs custom_component
  stat:
    path: /mnt/services/homeassistant/custom_components/hacs/manifest.json
  register: hacs_check
  become: true
  tags:
    - homeassistant
    - _check_stage4

- name: Install hacs if needed
  when: not hacs_check.stat.exists
  become: true
  tags:
    - homeassistant
    - _check_stage4
  block:
    - name: Download hacs
      check_mode: false
      get_url:
        url: https://github.com/hacs/integration/releases/download/2.0.5/hacs.zip
        checksum: sha256:97be6b824a4f38e683728cc6dd72367f6b8bad0a43428b1b3b987a3087adf413
        dest: /tmp/hacs.zip
        mode: "0644"
        owner: root
        group: root

    - name: Install hacs
      when: not (ansible_check_mode and homeassistant_hacs_dir.changed)
      unarchive:
        src: /tmp/hacs.zip
        remote_src: true
        dest: /mnt/services/homeassistant/custom_components/hacs
        mode: "a+rX"
        owner: homeassistant
        group: homeassistant
        list_files: true
      register: hacs_installed

    - name: Delete tar file
      file:
        path: /tmp/hacs.zip
        state: absent

- name: Install homeassistant service
  import_role:
    name: systemd_unit
    tasks_from: template
  vars:
    systemd_unit_src: homeassistant.service
    systemd_unit_condition: "{{ not (ansible_check_mode and homeassistant_user.changed) }}"
  tags:
    - homeassistant
    - _check_stage4

- name: Enable homeassistant service
  import_role:
    name: systemd_unit
    tasks_from: service
  vars:
    systemd_unit_src: homeassistant
    systemd_unit_condition: "{{ not (ansible_check_mode and (systemd_unit.changed or homeassistant_user.changed)) }}"
    systemd_unit_restart: "{{ systemd_unit.changed or homeassistant_conf.changed or thermal_comfort_icons_installed.changed or thermal_comfort_installed.changed or hacs_installed.changed or homeassistant_macros.changed or homeassistant_sensors.changed or homeassistant_templates.changed or homeassistant_blueprints.changed }}"
  tags:
    - homeassistant

- name: Configure nginx
  import_role:
    name: nginx
    tasks_from: site
  vars:
    nginx_subdomain: homeassistant
    nginx_proxy_pass: http://localhost:8123/
    nginx_csp_additional: "connect-src *.openstreetmap.org {{ nginx_csp_default }}; img-src *.cartocdn.com *.home-assistant.io {{ nginx_csp_default }}"
    nginx_location_conf: |
      add_header Access-Control-Allow-Origin "https://brands.home-assistant.io";
  tags:
    - homeassistant
