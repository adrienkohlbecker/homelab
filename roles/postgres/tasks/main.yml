- name: Add postgres group
  group:
    name: postgres
    system: true
  become: true
  tags:
    - postgres
    - _check_stage1
    - _check_stage2

- name: Add postgres user
  user:
    name: postgres
    group: postgres
    createhome: false
    system: true
    shell: /usr/sbin/nologin
    home: /nonexistent
  become: true
  register: postgres_user
  tags:
    - postgres
    - _check_stage1
    - _check_stage2

- name: Create configuration directory
  when: not (ansible_check_mode and postgres_user.changed)
  file:
    dest: /mnt/services/postgres
    state: directory
    owner: postgres
    group: postgres
    mode: "0700"
  become: true
  tags:
    - postgres
    - _check_stage2

- name: Init database
  when: not (ansible_check_mode and postgres_user.changed)
  command: >-
    podman run
      --rm --quiet
      --volume /mnt/services/postgres:/var/lib/postgresql/data
      --user {{ postgres_user.uid }}:{{ postgres_user.group }}
      --env POSTGRES_PASSWORD="{{ postgres_password }}"
      --env POSTGRES_INITDB_ARGS="--encoding=UTF8 --locale=en_US.UTF-8 --data-checksums"
      docker.io/postgres:16.3
      docker-ensure-initdb.sh
  args:
    creates: /var/lib/postgresql/data/PG_VERSION
  become: true
  tags:
    - postgres
    - _check_stage2

- name: Install postgres service
  import_role:
    name: systemd_unit
    tasks_from: template
  vars:
    systemd_unit_src: postgres.service
    systemd_unit_condition: "{{ not (ansible_check_mode and postgres_user.changed) }}"
  tags:
    - postgres
    - _check_stage2

- name: Enable postgres service
  import_role:
    name: systemd_unit
    tasks_from: service
  vars:
    systemd_unit_src: postgres
    systemd_unit_condition: "{{ not (ansible_check_mode and (systemd_unit.changed or postgres_user.changed)) }}"
    systemd_unit_start: "{{ not docker_test }}" # becomes unreachable?
    systemd_unit_restart: "{{ systemd_unit.changed }}"
  tags:
    - postgres
