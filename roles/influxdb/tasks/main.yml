- name: Add influxdb group
  group:
    name: influxdb
    system: true
  become: true
  tags:
    - influxdb
    - _check_stage1
    - _check_stage2

- name: Add influxdb user
  user:
    name: influxdb
    group: influxdb
    createhome: false
    system: true
    shell: /usr/sbin/nologin
    home: /nonexistent
  become: true
  register: influxdb_user
  tags:
    - influxdb
    - _check_stage1
    - _check_stage2

- name: Create configuration directory
  when: not (ansible_check_mode and influxdb_user.changed)
  file:
    dest: "{{ item.path }}"
    state: directory
    owner: influxdb
    group: influxdb
    mode: "{{ item.mode }}"
  loop:
    - { path: /mnt/services/influxdb,        mode: '0755'}
    - { path: /mnt/services/influxdb/config, mode: '0775'}
    - { path: /mnt/services/influxdb/data,   mode: '0700'}
  become: true
  tags:
    - influxdb
    - _check_stage2

- name: Install influxdb service
  import_role:
    name: systemd_unit
    tasks_from: template
  vars:
    systemd_unit_src: influxdb.service
    systemd_unit_condition: "{{ not (ansible_check_mode and influxdb_user.changed) }}"
  tags:
    - influxdb
    - _check_stage2

- name: Enable influxdb service
  import_role:
    name: systemd_unit
    tasks_from: service
  vars:
    systemd_unit_src: influxdb
    systemd_unit_condition: "{{ not (ansible_check_mode and (systemd_unit.changed or influxdb_user.changed)) }}"
    systemd_unit_restart: "{{ systemd_unit.changed }}"
  tags:
    - influxdb

- name: Initial setup
  when: not (ansible_check_mode and (systemd_unit.changed or influxdb_user.changed))
  command: podman exec influxdb influx setup --username "{{ influxdb_root_user }}" --password "{{ influxdb_root_password }}" --org home --bucket default --force
  args:
    creates: /mnt/services/influxdb/config/influx-configs
  become: true
  tags:
    - influxdb

- name: Configure nginx
  import_role:
    name: nginx
    tasks_from: site
  vars:
    nginx_subdomain: influxdb
    nginx_proxy_pass: http://localhost:8086/
  tags:
    - influxdb
