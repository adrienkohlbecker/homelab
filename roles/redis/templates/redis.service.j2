# jinja2: lstrip_blocks: "True"
# redis.service #######################################################################
[Unit]
Description=redis
After=network-online.target
Wants=network-online.target
StartLimitInterval=600
StartLimitBurst=3
{% if zfs_root %}
After=zfs_mount_mnt_services.service zfs_autosnapshot.target
Requires=zfs_mount_mnt_services.service
PartOf=zfs_autosnapshot.target
{% endif %}

[Service]
Environment=PODMAN_SYSTEMD_UNIT=%n
Restart=always
Delegate=yes
TimeoutSec=120
RestartSec=5
Type=notify
NotifyAccess=all
SyslogIdentifier=%N

ExecStartPre=/bin/rm -f %t/%n.ctr-id
ExecStart=/usr/bin/podman run \
    --cidfile=%t/%n.ctr-id \
    --cgroups=split \
    --sdnotify=healthy \
    --detach \
    --replace \
    --rm \
    --name redis \
    --log-driver journald \
    --log-opt tag="redis" \
    --volume /mnt/services/redis:/data \
    --user {{ redis_user.uid }}:{{ redis_user.group }} \
    --publish 127.0.0.1:6379:6379/tcp \
    --publish {{ podman_default_network | ansible.utils.ipmath(1) }}:6379:6379/tcp \
    --health-cmd "redis-cli ping | grep PONG" \
    --health-startup-cmd "redis-cli ping | grep PONG" \
    --health-startup-interval "1s" \
    --health-startup-timeout "5s" \
    --stop-timeout 120 \
    docker.io/redis:7.4 \
    redis-server --save 60 1 --loglevel warning
ExecStop=/usr/bin/podman stop --ignore --cidfile=%t/%n.ctr-id
ExecStopPost=/usr/bin/podman rm --force --ignore --cidfile=%t/%n.ctr-id

[Install]
WantedBy=default.target
{% if zfs_root %}
WantedBy=zfs_autosnapshot.target
{% endif %}
