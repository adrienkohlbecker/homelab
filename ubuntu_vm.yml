# References:
# http://plusbryan.com/my-first-5-minutes-on-a-server-or-essential-security-for-linux-servers
# http://lattejed.com/first-five-and-a-half-minutes-on-a-server-with-ansible
# https://help.ubuntu.com/community/StricterDefaults
# http://www.thefanclub.co.za/how-to/how-secure-ubuntu-1204-lts-server-part-1-basics

---
- hosts: vms
  user: root
  vars:
  - logwatch_email: alerts@kohlby.fr

  tasks:

  - name: Set hostname
    action: hostname name=nas

  - name: Set up locales
    action : shell locale-gen fr_FR.UTF-8 en_US.UTF-8

  - name: Set up locales
    action : shell dpkg-reconfigure locales

  - name: Update APT package cache
    action: apt update_cache=yes cache_valid_time=3600

  - name: Upgrade APT to the lastest packages
    action: apt upgrade=safe

  - name: Install vim
    action: apt pkg=vim state=installed

  - name: Install fail2ban
    action: apt pkg=fail2ban state=installed

  - name: Add admin group
    action: group name=admin state=present

  - name: Add adrien user to admin and ssh groups
    action: 'user name=adrien groups=admin,ssh append=yes'

  - name: Add authorized adrien key
    action: 'authorized_key user=adrien key="{{ item }}"'
    with_file:
      - /Users/adrien/.ssh/id_rsa.pub

  - name: Disable writing to authorized keys
    action: file path=/home/adrien/.ssh/authorized_keys mode=0400

  # - name: Disable su for non-admin users
  #   action: shell dpkg-statoverride --update --add root admin 4750 /bin/su

  - name: Disallow password authentication
    action: lineinfile dest=/etc/ssh/sshd_config regexp="^PasswordAuthentication" line="PasswordAuthentication no" state=present
    notify: Restart ssh

  - name: Disallow ssh access for non admin users
    action: lineinfile dest=/etc/ssh/sshd_config regexp="^AllowGroups" line="AllowGroups ssh" state=present
    notify: Restart ssh

  - name: Reduce ssh grace period to protect against ddos
    action: lineinfile dest=/etc/ssh/sshd_config regexp="^LoginGraceTime" line="LoginGraceTime 20" state=present
    notify: Restart ssh

  - name: Install unattended-upgrades
    action: apt pkg=unattended-upgrades state=present

  - name: Adjust APT update intervals
    action: copy src=config/apt_periodic dest=/etc/apt/apt.conf.d/10periodic

  # - name: Copy debconf selections so that Postfix can configure itself non-interactively
  #   copy: src=config/postfix_selections  dest=/tmp/postfix_selections

  # - name: Set up Postfix to relay mail
  #   action: command debconf-set-selections /tmp/postfix_selections

  # - name: Install postfix
  #   apt: pkg=postfix state=installed

  - name: Install libsasl2 for postfix TLS authentication
    apt: pkg=libsasl2-modules state=installed

  - name: Postfix relay configuration
    lineinfile: 'dest=/etc/postfix/main.cf regexp="{{ item.regexp }}" line="{{ item.line }}" state=present'
    register: kernel_config
    with_items:
      - { regexp: '^myorigin = ', line: 'myorigin = kohlby.fr' }
      - { regexp: '^myhostname =', line: 'myhostname = kohlby.fr'}
      - { regexp: '^relayhost =', line: 'relayhost = [smtp.mandrillapp.com]'}
      # enable SASL authentication
      - { regexp: '^smtp_sasl_auth_enable =', line: 'smtp_sasl_auth_enable = yes'}
      # tell Postfix where the credentials are stored
      - { regexp: '^smtp_sasl_password_maps =', line: 'smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd'}
      - { regexp: '^smtp_sasl_security_options =', line: 'smtp_sasl_security_options = noanonymous'}
      # use STARTTLS for encryption
      - { regexp: 'smtp_use_tls =', line: 'smtp_use_tls = yes'}

  - name: Install Sasl authentication details
    template: src=config/sasl_passwd.j2 dest=/etc/postfix/sasl_passwd owner=root group=root mode=0600

  - name: Update postfix credentials
    shell: postmap /etc/postfix/sasl_passwd

  - name: Restart postfix
    service: name=postfix state=restarted

  - name: Install logwatch
    action: apt pkg=logwatch state=installed

  - name: Make logwatch mail {{ logwatch_email }} daily
    action: lineinfile dest=/etc/cron.daily/00logwatch regexp="^/usr/sbin/logwatch" line="/usr/sbin/logwatch --output mail --mailto {{ logwatch_email }} --detail high" state=present create=yes

  - name: Setup root alias to {{ logwatch_email }}
    action: 'lineinfile dest=/etc/aliases regexp="^root:" line="root:{{ logwatch_email }}" state=present create=yes'

  - name: Setup adrien alias to {{ logwatch_email }}
    action: 'lineinfile dest=/etc/aliases regexp="^adrien:" line="adrien:{{ logwatch_email }}" state=present create=yes'

  - name: Rebuild aliases database
    action: shell newaliases

  - name: Setup ufw
    action: shell ufw allow ssh

  - name: Enable ufw
    action: shell ufw --force enable

  - name: Secure shared memory
    action: 'lineinfile dest=/etc/fstab line="none     /run/shm     tmpfs     defaults,ro     0     0" state=present'

  - name: Secure network with sysctl
    copy: src=config/sysctl.conf  dest=/etc/sysctl.conf

  - name: Restart sysctl
    action: shell sysctl -p

  - name: Prevent ip spoofing
    lineinfile: 'dest=/etc/host.conf regexp="^order" line="order bind,hosts" state=present'

  - name: Prevent ip spoofing
    lineinfile: 'dest=/etc/host.conf regexp="^nospoof" line="nospoof on" state=present'

  - name: Install apparmor
    apt: pkg={{ item }} state=installed
    with_items:
      - apparmor
      - apparmor-profiles

  - name: Disallow root SSH access
    action: lineinfile dest=/etc/ssh/sshd_config regexp="^PermitRootLogin" line="PermitRootLogin no" state=present
    notify: Restart ssh

  handlers:
  - name: Restart ssh
    action: service name=ssh state=restarted

  - name: Restart postfix
    action: service name=postfix state=restarted
